{"version":3,"sources":["constants/cartConstants.js","constants/userConstants.js","constants/productConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.jsx","actions/userActions.js","components/Header.jsx","components/Footer.jsx","components/Rating.jsx","components/Product.jsx","components/Loader.jsx","components/Message.jsx","components/Paginate.jsx","actions/productActions.js","components/productCarousel.jsx","components/Meta.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","actions/cartActions.js","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","actions/orderActions.js","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/ProductListScreen.jsx","screens/ProductEditScreen.jsx","screens/OrderListScreen.jsx","App.js","index.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productCreate","state","action","type","loading","success","product","payload","error","productDetails","reviews","productList","products","page","pages","productUpdate","productDelete","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userRegister","userInfo","userLogin","userDetails","user","userList","users","userUpdateProfile","userUpdate","userDelete","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","getProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","loadingReviewCreate","errorReviewCreate","successReviewCreate","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","textAlign","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","errorUpload","setErrorUpload","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","OrderListScreen","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2ec5334c.chunk.js","sourcesContent":["export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL    = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT        = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL    = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL    = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET   = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL    = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET   = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST  = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS  = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL     = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET    = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL    = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL    = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","// Le store est importé dans index.js\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'                                         // permet de faire des action async sur le store\r\nimport { composeWithDevTools } from 'redux-devtools-extension'          // permet d'utiliser le devtool Redux dans Chrome\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productCreate:  productCreateReducer,\r\n  productDetails: productDetailsReducer,\r\n  productList:    productListReducer,\r\n  productUpdate:  productUpdateReducer,\r\n  productDelete:  productDeleteReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart:           cartReducer,\r\n  userRegister:   userRegisterReducer,\r\n  userLogin:      userLoginReducer,\r\n  userDetails:    userDetailsReducer,\r\n  userList:       userListReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userUpdate:     userUpdateReducer,\r\n  userDelete:     userDeleteReducer,\r\n  orderCreate:    orderCreateReducer,\r\n  orderDetails:   orderDetailsReducer,\r\n  orderPay:       orderPayReducer,\r\n  orderListMy:    orderListMyReducer,\r\n  orderList:      orderListReducer,\r\n  orderDeliver:   orderDeliverReducer,\r\n})\r\n\r\n// Obtient le cart, userInfo et shippingAddress du localStorage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage  = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n// Initial state du store\r\nconst initialState = {\r\n  cart: { \r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk] \r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n  PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\"\r\n\r\n\r\n\r\n// Ajoute la liste des produits au store sous { productList: { products, page, pages }}\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      const { products, page, pages } = action.payload\r\n      return { loading: false, products, page, pages }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Ajoute la description du produit au store sous { productDetails : product }\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Ajoute un produit au store sous { productCreate: product }\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Édite un produit et l'enregistre dans le store sous { productUpdate: product }\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import { \r\n  CART_ADD_ITEM, CART_REMOVE_ITEM, \r\n  CART_SAVE_SHIPPING_ADDRESS, \r\n  CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = ( state = { cartItems: [], shippingAddress: {} }, action ) => {\r\n  switch(action.type) {\r\n    case CART_ADD_ITEM: \r\n      const item = action.payload\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n      if (existItem) {\r\n        return { ...state, cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x )}\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] }\r\n      }\r\n      case CART_REMOVE_ITEM:\r\n        return { ...state, cartItems: state.cartItems.filter((x) => x.product !== action.payload) }\r\n      case CART_SAVE_SHIPPING_ADDRESS:\r\n        return { ...state, shippingAddress: action.payload }\r\n      case CART_SAVE_PAYMENT_METHOD:\r\n        return { ...state, paymentMethod: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import {\r\n  USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\n  USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\r\n  USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, \r\n} from '../constants/userConstants'\r\n\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Ajoute la liste des usagés au store\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Génère les variables 'loading' et 'success' utilisées lorsqu'on supprime un usagé\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const userUpdateReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, \r\n  ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, \r\n  ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, \r\n  ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\n// Ajoute une commande dans la DB et dans le store\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload }\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Obtient une commande par son ID \r\nexport const orderDetailsReducer = ( state = { loading: true, orderItems: [], shippingAddress: {} }, action ) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload }\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Marque une commande comme payée\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n// Obtient la liste des commandes de l'usgagé contenu dans la DB et l'enregistre dans le store sous 'orderListMy: orders'\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return { loading: false, orders: action.payload }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Obtient la liste des commandes contenu dans la DB et l'enregistre dans le store sous { orderList: orders }\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload }\r\n    case ORDER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ORDER_DELIVER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products...' className='mr-sm-2 ml-sm-5'></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\n  USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, \r\n  USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\r\n  USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\n// Login -> Le backend vérifie l/p et retourne userInfo qu'on enregistre dans le store { userLogin: { userInfo: { _id, name, email, isAdmin, token }}}  \r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n    const config = {  headers: { 'Content-Type': 'application/json' }}\r\n    const { data } = await axios.post( '/api/users/login', { email, password }, config )  // Vérifie l/p et obtient userInfo\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })                                 // Enregistre 'userInfo' dans le store\r\n    localStorage.setItem('userInfo', JSON.stringify(data))                                // Enregistre 'userInfo' dans localStorage\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\n\r\n// Enregistre dans la DB, le store et localStorage { userLogin: { userInfo: { _id, name, email, isAdmin, token }}}  \r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n    const config = { headers: { 'Content-Type': 'application/json' }}\r\n    const { data } = await axios.post( '/api/users', { name, email, password }, config )    // Enregistre dans la DB\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data })                                // Enregistre 'userRegister' dans le state\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })                                   // Enregistre 'userInfo' dans le state\r\n    localStorage.setItem('userInfo', JSON.stringify(data))                                  // Enregistre 'userInfo' dans localStorage\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n// fct pour importer les infos de l'usagé dans la page \"ProfileScreen.jsx\"\r\n// store: userDetails: { user: { _id, name, email, isAdmin }}\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST })\r\n    const { userLogin: { userInfo }} = getState()                                     // Déconstruction... si login => obtient userInfo\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.get(`/api/users/${id}`, config)                      // Obtient de la DB {_id, name, email, isAdmin}\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })                           // Set  {user}\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n    const { userLogin: { userInfo }} = getState()                                     // Déconstruction... si login => obtient userInfo\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)              // Modifie l'usagé dans la DB; retourne {_id, name, email, isAdmin, token}\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Admin - Obtient la liste des usagés de la DB et l'enregistre dans le store sous { userList: users }\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST })\r\n    const { userLogin: { userInfo }} = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.get(`/api/users`, config)\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data })                            // Envoie la liste au réducer, qui l'enregistre dans le store\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Admin - Supprime un usagé dans la DB\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    await axios.delete(`/api/users/${id}`, config)\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n// Admin - Modifie le profil d'un usagé dans la DB\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST })\r\n    const { userLogin: { userInfo }} = getState()\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })           // Update le store -> userDetails: user\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from './SearchBox.jsx';\r\nimport { logout } from '../actions/userActions'\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n  const { userInfo } = useSelector(state => state.userLogin)                  // Extrait { _id, name, email, token } du store\r\n  const logoutHandler = () => { dispatch(logout())  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'><Nav.Link><i className='fa fa-shopping-cart'></i> Cart</Nav.Link></LinkContainer>\r\n              {/* Si login, affiche le nom du visiteur + drop-d own qui affiche 'profile' & 'logout' */}\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'><NavDropdown.Item>Profile</NavDropdown.Item></LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : <LinkContainer to='/login'><Nav.Link><i className='fa fa-user'></i> Sign In</Nav.Link></LinkContainer> }\r\n              {/* menu admin */}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'><NavDropdown.Item>Users</NavDropdown.Item></LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'><NavDropdown.Item>Products</NavDropdown.Item></LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'><NavDropdown.Item>Orders</NavDropdown.Item></LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-5'>\r\n            Copyright &copy; ProShop\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i style={{ color: color }} className={value >= 1 ? \"fa fa-star\" : value >= 0.5 ? \"fa fa-star-half-o\" : \"fa fa-star-o\"}></i>\n      </span>\n      <span>\n        <i style={{ color }} className={value >= 2 ? \"fa fa-star\" : value >= 1.5 ? \"fa fa-star-half-o\" : \"fa fa-star-o\"}></i>\n      </span>\n      <span>\n        <i style={{ color }} className={value >= 3 ? \"fa fa-star\" : value >= 2.5 ? \"fa fa-star-half-o\" : \"fa fa-star-o\"}></i>\n      </span>\n      <span>\n        <i style={{ color }} className={value >= 4 ? \"fa fa-star\" : value >= 3.5 ? \"fa fa-star-half-o\" : \"fa fa-star-o\"}></i>\n      </span>\n      <span>\n        <i style={{ color }} className={value >= 5 ? \"fa fa-star\" : value >= 4.5 ? \"fa fa-star-half-o\" : \"fa fa-star-o\"}></i>\n      </span>\n      <span> {text && text} </span>\n    </div>\n  );\n};\n\n// valeur par défaut au cas où on ne passe pas l'attribut 'color' lors de l'appel du composant\nRating.defaultProps = { color: \"#F8E825\" };\n\nexport default Rating;","// Carte contenant un produit (img + nom + rating + numReviews + prix)\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {                        // {product} permet d'extraire 'product' de 'props.product'\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}><Card.Img src={product.image} variant='top' /></Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}><Card.Title as='div'><strong>{product.name}</strong></Card.Title></Link>\r\n        <Card.Text as='div'><Rating color={\"#F8E825\"} value={product.rating} text={`${product.numReviews} reviews`} /></Card.Text>\r\n        <Card.Text as='h3'><div className='my-3'>${product.price}</div></Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner animation='border' role='status' style={{ width:'100px', height:'100px', margin:'auto', display:'block'}}>\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = { variant: 'info' }\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer key={x + 1} to={ !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`}>\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n  PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, \r\n  PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\"\r\n\r\n\r\n// Obtient la liste des produits de la DB et l'enregistre dans le store sous {productList: { products, page, pages }}\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)  // Obtient { products, pageNumber, pages } de MongoDB\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })                       // enregistre { products, pageNumber, pages } dans le store\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_LIST_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n// Obtient un produit par sont ID de la DB et l'enregistre dans le store sous {productDetails: product}\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n    const { data } = await axios.get(`/api/products/${id}`)                       // Obtient le produit de MongoDB\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })                    // enregistre le produit dans le store\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_DETAILS_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Supprime un produit de la DB \r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    await axios.delete(`/api/products/${id}`, config)\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_DELETE_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Ajoute un produit dans la DB et dans le store sous { productCreate: product }\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}`}}\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_CREATE_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.put(`/api/products/${product._id}`, product, config )\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS,  payload: data })              // enregistre le produit sous { productUpdate: product }\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })              // enregistre le produit sous { productDetails: product }\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_UPDATE_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS }) \r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_CREATE_REVIEW_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n    const { data } = await axios.get(`/api/products/top`)\r\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data }) \r\n  } catch (error) {\r\n    dispatch({ \r\n      type: PRODUCT_TOP_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n    })\r\n  }\r\n}","// Appel => <ProductCarousel />\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader.jsx'\r\nimport Message from './Message.jsx'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, products } = useSelector((state) => state.productTopRated)\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    loading ? <Loader /> : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n      <Carousel pause='hover' className='bg-light'>\r\n        { products.map((product) => (\r\n          <Carousel.Item key={product._id}>\r\n            <Link to={`/product/${product._id}`}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n              <Carousel.Caption className='carousel-caption'>\r\n                <h2>{product.name} (${product.price})</h2>\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","// Appel -> <Meta title='titre' description='lampe' keyword='lampe' /> où title, description et keyword sont optionnels\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport Product from \"../components/Product.jsx\"\r\nimport Loader from \"../components/Loader.jsx\";\r\nimport Message from \"../components/Message.jsx\";\r\nimport Paginate from '../components/Paginate.jsx'\r\nimport ProductCarousel from \"../components/productCarousel.jsx\";\r\nimport Meta from \"../components/Meta.jsx\"\r\nimport { listProducts } from '../actions/productActions.js'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n  const { loading, error, products, page, pages } = useSelector(state => state.productList)\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))                                  // 'listProducts()' de productActions.js obtient 'products', 'loading' et 'error'\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n      <h1>Latest Products</h1>\r\n      { loading ? <Loader /> : error ? <Message variant='danger'>{ error }</Message> : ( \r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport Message from '../components/Message.jsx'\r\nimport Meta from '../components/Meta.jsx'\r\nimport { getProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {                                    // match === param du URL\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n  \r\n  const dispatch = useDispatch()                                          // useDispatch() retourne une ref à store.dispatch()\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n  const { loading, error, product } = useSelector((state => state.productDetails)) // useSelector is a function that takes the current state as an argument and returns whatever data you want from it.\r\n  const { loading: loadingReviewCreate, error: errorReviewCreate, success: successReviewCreate } = useSelector((state) => state.productReviewCreate)\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (successReviewCreate) { \r\n      setRating(0) \r\n      setComment('') \r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(getProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successReviewCreate, product._id])\r\n\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch( createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Meta title={product.name} />\r\n      <Link className='btn btn-light my-3' to=\"/\">Go Back</Link>\r\n      { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}><Image src={product.image} alt={product.name} fluid /></Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item><h3>{product.name}</h3></ListGroup.Item>\r\n                <ListGroup.Item><Rating value={product.rating} text={`${product.numReviews} reviews`} /></ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>{product.description}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col><strong>${product.price}</strong></Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {/* drow-down menu avec la quantité disponible */}\r\n                { product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                          {[...Array(product.countInStock).keys()].map(x => (\r\n                            <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>Add To Cart</Button>\r\n                </ListGroup.Item>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successReviewCreate && ( <Message variant='success'>Review submitted successfully</Message> )}\r\n                  {loadingReviewCreate && <Loader />}\r\n                  {errorReviewCreate && ( <Message variant='danger'>{errorReviewCreate}</Message> )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                      </Form.Group>\r\n                      <Button disabled={loadingReviewCreate} type='submit' variant='primary'>Submit</Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>Please <Link to='/login'>sign in</Link> to write a review{' '}</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","// Actions Creators\r\nimport axios from 'axios'\r\nimport { \r\n  CART_ADD_ITEM, CART_REMOVE_ITEM, \r\n  CART_SAVE_SHIPPING_ADDRESS, \r\n  CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty: qty\r\n    }\r\n  })\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: id })\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n// Enregistre shippingAddress : { address, city, postalCode, country } dans le store + localStorage \r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n// Enregistre \"paymentMethod: PayPal\" dans le store + localStorage \r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message.jsx'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id                                         // Extrait le id du url\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1   // Extrait la qty du url (?qty=4)\r\n\r\n  const dispatch = useDispatch()\r\n  const { cartItems } = useSelector(state => state.cart)\r\n\r\n  useEffect(() => {\r\n    if (productId) {                                                        // si la page est appelée avec un id dans la url (/cart/id)\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n  \r\n  return (\r\n    <Row>\r\n      {/* Liste des items du cart: photo, description, prix, qty, delete */}\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (<Message>Your cart is empty <Link to='/'>Go Back</Link></Message>) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}><Image src={item.image} alt={item.name} fluid rounded /></Col>\r\n                  <Col md={3}><Link to={`/product/${item.product}`}>{item.name}</Link></Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control as='select' value={item.qty}  onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                      {[...Array(item.countInStock).keys()].map((x) => (<option key={x + 1} value={x + 1}> {x + 1} </option>))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fa fa-trash'></i> </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      {/* Carte avec Nb Items + Sous total + bouton CHECKOUT */}\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})items</h2>\r\n              ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed To Checkout</Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>      \r\n  )\r\n}\r\n\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [ email, setEmail ] = useState('')                                      // Cré un state pour 'email' pour le champ\r\n  const [ password, setPassword ] = useState('')                                // un state password pour le champ password\r\n  const dispatch = useDispatch()                                                // pour modifier le store redux\r\n  const { loading, error, userInfo } = useSelector((state) => state.userLogin)  // extrait login, error, userInfo de store\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'        // Extrait le 'redirect=shipping' du URL\r\n\r\n  // Redirige l'usagé si 'userInfo' est dans le store\r\n  useEffect(() => {\r\n      if (userInfo) { history.push(redirect) }\r\n  }, [history, userInfo, redirect] )\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))                                            // Exécute l'action 'login' du store-redux\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>Sign In</Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></Col>\r\n      </Row>\r\n    </FormContainer>\r\n   );\r\n}\r\n\r\nexport default LoginScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [ name, setName ] = useState('')                                        // Cré un state pour 'name' pour le champ\r\n  const [ email, setEmail ] = useState('')                                      // Cré un state pour 'email' pour le champ\r\n  const [ password, setPassword ] = useState('')                                // Cré un state pour 'password' pour le champ password\r\n  const [ confirmPassword, setConfirmPassword ] = useState('')                  // Cré un state pour 'confirmPassword' pour le champ confirmPassword\r\n  const [ message, setMessage ] = useState(null)\r\n\r\n  const dispatch = useDispatch()                                                // pour modifier le store redux\r\n  const { loading, error, userInfo } = useSelector((state) => state.userRegister)  // extrait login, error, userInfo de store\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) { history.push(redirect) }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>Register</Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '} <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> Login </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\n\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const { loading, error, user }  = useSelector((state) => state.userDetails)                     // Obtient le profil de la DB\r\n  const { userInfo }              = useSelector((state) => state.userLogin)                       // Si login, obtient JSON { _id, name, email, isAdmin, token }\r\n  const { success }               = useSelector((state) => state.userUpdateProfile)               // Obtient la valeur success du store \r\n  const { loading: loadingOrders, error: errorOrders, orders } = useSelector((state) => state.orderListMy) // Liste des commandes du visiteur\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else { \r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })                                              // supprime l'ancien profil\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())                                                                    // Obtient la liste des commandes du visiteur et l'enregistre dans le store sous orderListMy: orders\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [ dispatch, history, userInfo, user, success ])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))      // update la DB; la DB renvoie les infos; update 'userInfo'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>Update</Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className='fa fa-times' style={{ color: 'red' }}></i>}</td>\r\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : <i className='fa fa-times' style={{ color: 'red' }}></i>}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, \r\n  ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, \r\n  ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, \r\n  ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\n\r\n// Ajoute une commande dans la DB\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()                        // Obtient 'userInfo' du store\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ \r\n      type: ORDER_CREATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n// Obtient une commande par son ID \r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Marque une commande comme étant payée\r\n// 'paymentResult' provient de PayPal\r\nexport const payOrder = (orderId, paymentResult) => async ( dispatch, getState ) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.put( `/api/orders/${orderId}/pay`, paymentResult, config )\r\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Obtient la liste des commandes de l'usgagé contenu dans la DB\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Obtient la liste des commandes \r\nexport const getOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Marque une commande comme livrée dans la DB\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST })\r\n    const { userLogin: { userInfo } } = getState()\r\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` }}\r\n    const { data } = await axios.put( `/api/orders/${order._id}/deliver`, {}, config )\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","// Bannière avec les liens /login, /shipping, /payment, /placeorder affichés selon progression des achats\r\n// Ex d'appel ->  <CheckoutSteps step1 step2 />\r\nimport React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? ( <LinkContainer to='/login'><Nav.Link>Sign In</Nav.Link></LinkContainer> ) : ( <Nav.Link disabled>Sign In</Nav.Link> )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? ( <LinkContainer to='/shipping'><Nav.Link>Shipping</Nav.Link></LinkContainer> ) : ( <Nav.Link disabled>Shipping</Nav.Link> )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? ( <LinkContainer to='/payment'><Nav.Link>Payment</Nav.Link></LinkContainer> ) : ( <Nav.Link disabled>Payment</Nav.Link> )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? ( <LinkContainer to='/placeorder'><Nav.Link>Place Order</Nav.Link></LinkContainer> ) : ( <Nav.Link disabled>Place Order</Nav.Link> )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport CheckoutSteps from '../components/CheckoutSteps.jsx'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector(state => state.cart)                        // Extrait 'shippingAddress' du store\r\n  \r\n  const [address, setAddress] = useState(shippingAddress.address)                     \r\n  const [city, setCity] = useState(shippingAddress.city)                              \r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)            \r\n  const [country, setCountry] = useState(shippingAddress.country)                     \r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // Enregistre shippingAddress : { address, city, postalCode, country } dans le store + localStorage \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control value={address} onChange={(e) => setAddress(e.target.value)} type='text' placeholder='Enter address' required></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control value={city} onChange={(e) => setCity(e.target.value)} type='text' placeholder='Enter city' required></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control value={postalCode} onChange={(e) => setPostalCode(e.target.value)} type='text' placeholder='Enter postal code' required></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control value={country} onChange={(e) => setCountry(e.target.value)} type='text' placeholder='Enter country' required></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'> Continue </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","// Page affichant deux boutons radio pour sélectionner le mode de paiement (Paypal ou Stripe)\r\nimport React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport CheckoutSteps from '../components/CheckoutSteps.jsx'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { shippingAddress } = useSelector((state) => state.cart)              // Extrait 'shippingAddress' du store\r\n  if (!shippingAddress.address) { history.push('/shipping') }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')                // PayPal par défault\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))                                // Enregistre \"paymentMethod: PayPal\" dans le store + localStorage \r\n    history.push('/placeorder')                                               // Redirige sur /placeorder\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      \r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check value='PayPal' onChange={(e) => setPaymentMethod(e.target.value)} type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' checked></Form.Check>\r\n            <Form.Check value='Stripe' onChange={(e) => setPaymentMethod(e.target.value)} type='radio' label='Stripe' id='Stripe' name='paymentMethod'></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'> Continue </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","// Affiche un sommaire des infos pour la commande: adresse de livraison, méthode de paiement, liste des items... et bouton PLACE ORDER\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport CheckoutSteps from '../components/CheckoutSteps.jsx'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)                               // Obtient cart du store\r\n  const { order, success, error } = useSelector((state) => state.orderCreate)   // Obtient orderCreate du store\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n\r\n  // Arrondi un nombre à 2 décimales (ex. \"33.00\")\r\n  const addDecimals = (num) => (Math.round(num * 100) / 100).toFixed(2)\r\n  // Coût des items, shipping, taxes et le total\r\n  cart.itemsPrice     = Number(addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)))\r\n  cart.shippingPrice  = Number(addDecimals(cart.itemsPrice > 100 ? 10 : 40))\r\n  cart.taxPrice       = Number(addDecimals(0.15 * cart.itemsPrice))\r\n  cart.totalPrice     = Number(addDecimals(cart.itemsPrice + cart.shippingPrice + cart.taxPrice))\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch( createOrder({\r\n        orderItems:       cart.cartItems,\r\n        shippingAddress:  cart.shippingAddress,\r\n        paymentMethod:    cart.paymentMethod,\r\n        itemsPrice:       cart.itemsPrice,\r\n        shippingPrice:    cart.shippingPrice,\r\n        taxPrice:         cart.taxPrice,\r\n        totalPrice:       cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{textAlign: \"center\"}}>Place Order Screen</h1>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            {/* Adresse de livraison */}\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            {/* Méthode de paiement */}\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            {/* Liste des items dans le panier: photo, description, qty, prix */}\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? ( <Message>Your cart is empty</Message> ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}><Image src={item.image} alt={item.name} fluid rounded /></Col>\r\n                        <Col><Link to={`/product/${item.product}`}>  {item.name} </Link></Col>\r\n                        <Col md={4}>{`${item.qty} x $${item.price} = ${addDecimals(item.qty * item.price)}`}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        \r\n        {/* Carte avec le sommaire: coût des items, coût du shipping, taxes, total et bouton PLACE ORDER */}\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item> <h2>Order Summary</h2> </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item> \r\n                {error && <Message variant='danger'>{error}</Message>} \r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}> Place Order </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";                                 // Offre des boutons PayPal et CC\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id  \r\n                               \r\n  const [sdkReady, setSdkReady] = useState(false)                                     // Variable pour vérifier si SDK Script PayPal à été ajouté au HTML \r\n  \r\n  const dispatch = useDispatch()\r\n  const { userInfo }                                 = useSelector((state) => state.userLogin)\r\n  const { order, loading, error }                    = useSelector((state) => state.orderDetails)\r\n  const { loading: loadingPay, success: successPay } = useSelector((state) => state.orderPay) // Vérifie si la commande est payée\r\n  const { loading: loadingDeliver, success: successDeliver } = useSelector((state) => state.orderDeliver)\r\n\r\n  const addDecimals = (num) => (Math.round(num * 100) / 100).toFixed(2)               // Arrondi un nb à 2 dédimales (ex. \"33.00\")\r\n  \r\n  // Attend d'avoir reçu la commande de la DB pour calculer le coût des items\r\n  if (!loading) {     \r\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)) \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    // fct pour ajouter le Script SDK PayPal '<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>' à la fin de la page\r\n    const addPayPalScript = async () => {                      \r\n      const { data: clientId } = await axios.get('/api/config/paypal')          // Obtient PAYPAL_CLIENT_ID \r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => { setSdkReady(true) }                               // Set 'sdkReady' = true\r\n      document.body.appendChild(script)                         \r\n    }\r\n\r\n    if (!order || successPay || successDeliver) {                               // Si vient juste d'être payée ou livrée\r\n      dispatch({ type: ORDER_PAY_RESET })                                       // Efface les infos de 'orderPay: {}' du store\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))                                        // Rafraichi les données\r\n    } else if (!order.isPaid) {                                                 // Si pas payé\r\n      if (!window.paypal) {                                                     // Si le script SDK PayPal absent\r\n        addPayPalScript()                                                       // Ajouter le script SDK PayPal\r\n      } else {\r\n        setSdkReady(true)                                                       // Set 'sdkReady' = true\r\n      }\r\n    }\r\n\r\n  }, [ dispatch, orderId, successPay, successDeliver, order, history, userInfo ])\r\n\r\n  \r\n\r\n  // Gère la réponse de réception de payment de PayPal\r\n  const successPaymentHandler = (paymentResult) => {\r\n    // console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))                                  // Marque la commande payée\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n\r\n  return loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n    <>\r\n      <h1 style={{textAlign: \"center\"}}>Order Status</h1>\r\n      <Row>\r\n        {/* Info de la commande: Nom, email, adresse, méthode de payment, Items commandés */}\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Order:  {order._id}</h2>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name: </strong> {order.user.name}</p>\r\n              <p><strong>Email: </strong>{' '}<a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p><strong>Address:</strong>{' '}{order.shippingAddress.address}, {order.shippingAddress.city}{' '}{order.shippingAddress.postalCode},{' '}{order.shippingAddress.country}</p>\r\n              {order.isDelivered ? ( <Message variant='success'> Delivered on {order.deliveredAt} </Message> ) : ( <Message variant='danger'>Not Delivered</Message> )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p><strong>Method: </strong>{order.paymentMethod}</p>\r\n              {order.isPaid ? ( <Message variant='success'>Paid on {order.paidAt}</Message> ) : ( <Message variant='danger'>Not Paid</Message> )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? ( <Message>Order is empty</Message> ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}><Image src={item.image} alt={item.name} fluid rounded /></Col>\r\n                        <Col><Link to={`/product/${item.product}`}>{item.name}</Link></Col>\r\n                        <Col md={4}>{item.qty} x ${item.price} = ${addDecimals(item.qty * item.price)}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        {/* Carte avec le sommaire des coûts: items, shipping, taxes, total */}\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item><h2>Order Summary</h2></ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${addDecimals(order.shippingPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {/* si non-payé, affiche un spinner et les boutons PayPal */}\r\n              {!order.isPaid && (\r\n                <ListGroup.Item> \r\n                  {loadingPay && <Loader />} \r\n                  {!sdkReady ? <Loader /> : ( <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} /> )}\r\n                </ListGroup.Item>)\r\n              }\r\n\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button type='button' className='btn btn-block' onClick={deliverHandler}>Mark As Delivered</Button>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, users }   = useSelector((state) => state.userList)\r\n  const { userInfo }                = useSelector((state) => state.userLogin)\r\n  const { success: successDelete }  = useSelector((state) => state.userDelete)\r\n  \r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th className='text-center'>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                <td className='text-center'>{user.isAdmin ? ( <i className='fa fa-check' style={{ color: 'green' }}></i> ) : ( <i className='fa fa-times' style={{ color: 'red' }}></i> )}</td>\r\n                <td className='text-center'>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'><i className='fa fa-edit' title=\"Edit\"></i></Button>\r\n                  </LinkContainer>\r\n                </td>\r\n                <td className='text-center'><Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}><i className='fa fa-trash' title=\"Delete\"></i></Button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\n\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = useSelector((state) => state.userUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary' className='my-3'>Update</Button>\r\n          </Form>\r\n        )\r\n      }\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport Paginate from '../components/Paginate.jsx'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { userInfo }                               = useSelector((state) => state.userLogin)\r\n  const { loading, error, products, page, pages }  = useSelector((state) => state.productList)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = useSelector((state) => state.productDelete)\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = useSelector((state) => state.productCreate)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    } else if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)                   // Si le produit vient d'être créé, redirige sur la page pour éditer ses propriétées\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo, successCreate, createdProduct, pageNumber])\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Produits</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}><i className='fa fa-plus'></i> Ajouter un produit</Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NOM</th>\r\n                <th>PRIX</th>\r\n                <th>CATEGORIE</th>\r\n                <th>MARQUE</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td className='text-center'>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'><i className='fa fa-edit'></i></Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td className='text-center'><Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}><i className='fa fa-trash'></i></Button></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport FormContainer from '../components/FormContainer.jsx'\r\nimport { getProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  const [errorUpload, setErrorUpload] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const { loading, error, product } = useSelector((state) => state.productDetails)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = useSelector((state) => state.productUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })                        // Efface { productUpdate: product } du store\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {               // Si on n'a pas le nom du produit ou si son _id ne correspond pas au id du URL... obtenir le produit de la DB\r\n        dispatch(getProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate ])\r\n\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]                            // [0] puisqu'on a seulement une image. On utiliserais e.target.files pour plusieurs images\r\n    const formData = new FormData()                           // Cré un élément du DOM\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    try {\r\n      const config = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error('Erreur de téléchargement:', error)\r\n      setErrorUpload('Images only!')\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateProduct({ _id: productId, name, price, image, brand, category, description, countInStock }))\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control type='number' placeholder='Enter price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control type='text' placeholder='Enter image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n              <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n              {uploading && <Loader />}\r\n              {errorUpload && <Message variant='danger'>{errorUpload}</Message>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control type='text' placeholder='Enter brand' value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control type='number' placeholder='Enter countInStock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control type='text' placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control type='text' placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>Update</Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.jsx'\r\nimport Loader from '../components/Loader.jsx'\r\nimport { getOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, orders } = useSelector((state) => state.orderList)\r\n  const { userInfo }               = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>{order.isPaid ? ( order.paidAt.substring(0, 10) ) : (<i className='fa fa-times' style={{ color: 'red' }}></i>)}</td>\r\n                <td>{order.isDelivered ? ( order.deliveredAt.substring(0, 10) ) : (<i className='fa fa-times' style={{ color: 'red' }}></i>)}</td>\r\n                <td className='text-center'>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>Details</Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';                               // Container centre les div\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen.jsx';\r\nimport ProductScreen from './screens/ProductScreen.jsx';\r\nimport CartScreen from './screens/CartScreen.jsx';\r\nimport LoginScreen from './screens/LoginScreen.jsx';\r\nimport RegisterScreen from './screens/RegisterScreen.jsx';\r\nimport ProfileScreen from './screens/ProfileScreen.jsx';\r\nimport ShippingScreen from './screens/ShippingScreen.jsx'\r\nimport PaymentScreen from './screens/PaymentScreen.jsx';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen.jsx';\r\nimport OrderScreen from './screens/OrderScreen.jsx';\r\nimport UserListScreen from './screens/UserListScreen.jsx';\r\nimport UserEditScreen from './screens/UserEditScreen.jsx';\r\nimport ProductListScreen from './screens/ProductListScreen.jsx';\r\nimport ProductEditScreen from './screens/ProductEditScreen.jsx'\r\nimport OrderListScreen from './screens/OrderListScreen.jsx';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\r\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './bootstrap.min.css';                                     // Theme bootstrap downloadé chez bootswatch.com\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}